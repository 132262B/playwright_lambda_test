# Use the Playwright base image, matching package.json version
FROM mcr.microsoft.com/playwright:v1.54.2-noble-arm64

RUN apt-get update && apt-get install -y \
    g++ \
    make \
    cmake \
    unzip \
    libcurl4-openssl-dev \
    autoconf \
    libtool \
    python3-dev \
    python3-pip \
    python3-setuptools

ENV NPM_CONFIG_CACHE=/tmp/.npm

# To cache the npm install step
RUN npm install -g aws-lambda-ric

COPY package.json ./

# Set environment before installing anything
ENV PLAYWRIGHT_BROWSERS_PATH=/tmp/.cache/ms-playwright
ENV HOME=/tmp
ENV XDG_CONFIG_HOME=/tmp
ENV XDG_CACHE_HOME=/tmp
ENV XDG_DATA_HOME=/tmp
ENV XDG_STATE_HOME=/tmp
ENV TMPDIR=/tmp

# Install the application dependencies
RUN npm install

# Install Playwright browsers
RUN mkdir -p /tmp/.cache/ms-playwright && \
    PLAYWRIGHT_BROWSERS_PATH=/tmp/.cache/ms-playwright npx playwright install chromium && \
    find /tmp -name "*chromium*" -type d && \
    find /tmp -name "*chrome*" -type f && \
    find /opt -name "*chromium*" -type d 2>/dev/null || true && \
    find /opt -name "*chrome*" -type f 2>/dev/null || true

USER root
RUN mkdir -p /etc/credstore /etc/credstore.encrypted && \
    chmod 755 /etc/credstore /etc/credstore.encrypted || true && \
    chmod -R 755 /etc/ssl || true && \
    chmod -R 755 /home/pwuser || true && \
    chmod -R 755 /home/ubuntu || true && \
    mkdir -p /tmp/.config /tmp/proc && \
    chmod 777 /tmp/.config /tmp/proc && \
    rm -rf /proc/tty/driver || true && \
    mkdir -p /proc/tty/driver && \
    chmod 777 /proc/tty/driver || true

# Additional environment variables for Lambda
ENV FONTCONFIG_PATH=/tmp
ENV FONTCONFIG_FILE=/tmp/fonts.conf
ENV DISPLAY=:99

USER pwuser


# Copy the application code to the container
COPY . .

# RUN npm run build

# Find the correct npx path and use it
RUN which npx > /tmp/npx_path

ENTRYPOINT ["/bin/sh", "-c", "npx aws-lambda-ric handler.runTest"]